apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager

---

kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: cert-manager-cacerts-csi-driver
  namespace: cert-manager
spec:
  selector:
    matchLabels:
      app: cert-manager-cacerts-csi-driver
  template:
    metadata:
      labels:
        app: cert-manager-cacerts-csi-driver
    spec:
      serviceAccountName: cert-manager-cacerts-csi-driver
      hostNetwork: true
      containers:
        - name: node-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.3.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/csi-image /registration/csi-image-reg.sock"]
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-image/csi.sock
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir

        - name: driver
          image: appscode/csi-driver-cacerts:cacerts_linux_amd64@sha256:39c2cfd851b69dcaec450c8f803f8744e0982d73894cca352e18707c08b99b19
          args:
            - "--v=5"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          imagePullPolicy: Always
          securityContext:
            privileged: true
          # Defining port which will be used to GET plugin health status
          # 9808 is default, but can be changed.
          ports:
          - containerPort: 9808
            name: healthz
            protocol: TCP
          # The probe
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /var/lib/containers/storage
              mountPropagation: Bidirectional
              name: storageroot-dir
            - mountPath: /var/run/containers/storage
              mountPropagation: Bidirectional
              name: storagerunroot-dir

        - name: liveness-probe
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.4.0
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=9808
            - --v=2
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi

      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/csi-image
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/containers/storage
            type: DirectoryOrCreate
          name: storageroot-dir
        - hostPath:
            path: /var/run/containers/storage
            type: DirectoryOrCreate
          name: storagerunroot-dir
